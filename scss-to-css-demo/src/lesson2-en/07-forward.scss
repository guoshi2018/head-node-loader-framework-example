/*
	This is written @forward "<url>" as <prefix>-*, and it adds the given 
	prefix to the beginning of every mixin, function, and variable name 
	forwarded by the module. For example, if the module defines a member 
	named reset and it’s forwarded as list-*, downstream stylesheets 
	will refer to it as list-reset.
*/
//@forward "lib/list" as list-*;

/*
	Controlling Visibility permalinkControlling Visibility(控制可见性)
	Sometimes, you don’t want to forward every member from a module. 
	You may want to keep some members private so that only your package 
	can use them, or you may want to require your users to load some 
	members a different way. You can control exactly which members get 
	forwarded by writing @forward "<url>" hide <members...> or @forward "<url>" 
	show <members...>.

	The hide form means that the listed members shouldn’t be forwarded, 
	but everything else should. The show form means that only the named 
	members should be forwarded. In both forms, you list the names of mixins, 
	functions, or variables (including the $).
*/
//前缀与hide/show同时使用, 在变量的表达上,有些问题: list-$hor-gap 写法需要改进.以后再说
//@forward "lib/list" as list-* hide list-reset; //hide(show)者,需要当前定义的前缀
//@forward "lib/list" as list-* show list-horizontal;

@forward "lib/list" show horizontal, $hor-gap;

/*
	Configuring Modules(配置模块)
	The @forward rule can also load a module with configuration. This mostly 
	works the same as it does for @use, with one addition: 

		a @forward rule’s configuration can use the !default flag in its configuration. 
	
	This allows a module to change the defaults of an upstream stylesheet while still 
	allowing downstream stylesheets to override them.
*/
// _library.scss
// $black: #000 !default;
// $border-radius: 0.25rem !default;
// $box-shadow: 0 0.5rem 1rem rgba($black, 0.15) !default;

// code {
//   border-radius: $border-radius;
//   box-shadow: $box-shadow;
// }
// // _opinionated.scss
// @forward 'library' with (
//   $black: #222 !default,
//   $border-radius: 0.1rem !default
// );
// // style.scss
// @use 'opinionated' with ($black: #333);
